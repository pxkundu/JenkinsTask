name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: self-hosted  # Or [self-hosted, amazon-linux-2] if you added a specific label

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker (if not already installed on the EC2 instance)
      - name: Set up Docker
        run: |
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -aG docker $USER

      # Install backend dependencies and run tests
      - name: Test Backend
        working-directory: ./backend
        run: |
          npm install

      # Install frontend dependencies and run tests
      - name: Test Frontend
        working-directory: ./frontend
        run: |
          npm install

      # Test the full stack with docker-compose
      - name: Test Docker Compose Stack
        run: |
          docker-compose -f docker-compose.yml up -d || { docker-compose logs; exit 1; }
          sleep 10  # Adjust based on how long your services take to start
          curl http://localhost:5000 || exit 1  # Basic backend check
          curl http://localhost:8080 || exit 1  # Basic frontend check
          docker-compose -f docker-compose.yml down --remove-orphans

    # Ensure containers are cleaned up even if the job fails
    env:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
