// Jenkinsfile.functions
def checkDockerFileChanges() {
    stage('Check Dockerfile Changes') {
        script {
            def lastCommit = sh(script: "git rev-parse HEAD^ || git rev-list --max-parents=0 HEAD", returnStdout: true).trim()
            def changes = sh(script: "git diff --name-only ${lastCommit} HEAD | grep -E 'backend/Dockerfile|frontend/Dockerfile|nginx/Dockerfile' || true", returnStdout: true).trim()
            if (changes && !changes.isEmpty()) {
                echo "Dockerfile changes detected: ${changes}"
            } else {
                echo "No Dockerfile changes detected"
            }
        }
    }
}

def buildAndRunWithDockerCompose() {
    stage('Build and Run with Docker Compose') {
        script {
            sh "docker-compose down || true"  // Preserve volumes
            sh "docker-compose build --no-cache"
            sh "docker-compose up -d"
            sh "docker ps -a"
            timeout(time: 30, unit: 'SECONDS') {
                sh "curl --retry 5 --retry-delay 5 http://partha.snehith-dev.com/api/tasks"
                sh "curl --retry 5 --retry-delay 5 http://partha.snehith-dev.com/"
            }
        }
        post {
            failure {
                script {
                    echo "Build or run failed, rolling back to stable ECR images"
                    sh "docker-compose down || true"
                    sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com"
                    sh "sed -i 's/task-backend-${BUILD_NUMBER}/task-backend-latest/g' docker-compose.yml"
                    sh "sed -i 's/task-frontend-${BUILD_NUMBER}/task-frontend-latest/g' docker-compose.yml"
                    sh "sed -i 's/task-nginx-${BUILD_NUMBER}/task-nginx-latest/g' docker-compose.yml"
                    sh "docker-compose pull || echo 'No stable images found in ECR, skipping pull'"
                    sh "docker-compose up -d"
                    timeout(time: 30, unit: 'SECONDS') {
                        sh "curl --retry 5 --retry-delay 5 http://partha.snehith-dev.com/api/tasks"
                        sh "curl --retry 5 --retry-delay 5 http://partha.snehith-dev.com/"
                    }
                    sh "sed -i 's/task-backend-latest/task-backend-${BUILD_NUMBER}/g' docker-compose.yml"
                    sh "sed -i 's/task-frontend-latest/task-frontend-${BUILD_NUMBER}/g' docker-compose.yml"
                    sh "sed -i 's/task-nginx-latest/task-nginx-${BUILD_NUMBER}/g' docker-compose.yml"
                }
            }
        }
    }
}

def checkAndPushToECR() {
    stage('Push Latest to ECR') {
        script {
            def lastCommit = sh(script: "git rev-parse HEAD^ || git rev-list --max-parents=0 HEAD", returnStdout: true).trim()
            def changes = sh(script: "git diff --name-only ${lastCommit} HEAD | grep -E 'backend/Dockerfile|frontend/Dockerfile|nginx/Dockerfile' || true", returnStdout: true).trim()
            if (changes && !changes.isEmpty()) {
                echo "Dockerfile changes detected: ${changes}"
                
                // Before pushing Delete remote latest images first with docker command
                sh "docker rmi ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-backend-latest || true"
                sh "docker rmi ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-frontend-latest || true"
                sh "docker rmi ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-nginx-latest || true"
                sh "docker tag ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-backend-${BUILD_NUMBER} ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-backend-latest"
                sh "docker tag ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-frontend-${BUILD_NUMBER} ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-frontend-latest"
                sh "docker tag ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-nginx-${BUILD_NUMBER} ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-nginx-latest"
                retry(3) {
                    sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-backend-latest"
                    sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-frontend-latest"
                    sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-nginx-latest"
                }
                sh "docker rmi ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-backend-${BUILD_NUMBER} || true"
                sh "docker rmi ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-frontend-${BUILD_NUMBER} || true"
                sh "docker rmi ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/partha-ecr:task-nginx-${BUILD_NUMBER} || true"
        
            } else {
                echo "No Dockerfile changes detected"
            }
        }
    }
}

return this